using System;
using System.IO;
using HotDocs.Sdk;

public class TemplateAnywhere : Template
{
    public TemplateAnywhere(string fileName, ITemplateLocation location, string switches = "", string key = "")
        : base(fileName, switches, key)
    {

    }

    public TemplateAnywhere(PackageTemplateLocation location, string switches = "", string key = "")
        : base(location, switches, key)
    {

    }

    public ITemplate Location { get; private set; }

    /// <summary>
    /// Returns a Template created from a locator string generated by CreateLocator.
    /// </summary>
    /// <param name="locator">A locator string provided by CreateLocator.</param>
    /// <returns></returns>
    public static ITemplate Locate(string locator)
    {
        if (string.IsNullOrEmpty(locator))
            throw new ArgumentNullException("locator");

        string decryptedLocator = Util.DecryptString(locator);
        string[] tokens = decryptedLocator.Split('|');
        if (tokens.Length != 4)
            throw new Exception("Invalid template locator.");

        string fileName = tokens[0];
        string switches = tokens[1];
        string key = tokens[2];
        string locationLocator = tokens[3];

        //TODO fix this
        //ITemplateOnDisk template = new DiskAccessibleTemplate(fileName, TemplateLocationSerializer.Locate(locationLocator), switches);
        ITemplate template = null;
        template.Key = key;
        template.UpdateFileName();
        return template;
    }
}